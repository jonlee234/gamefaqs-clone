[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "game.models",
        "description": "game.models",
        "isExtraImport": true,
        "detail": "game.models",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "game.models",
        "description": "game.models",
        "isExtraImport": true,
        "detail": "game.models",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "game.models",
        "description": "game.models",
        "isExtraImport": true,
        "detail": "game.models",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "game.models",
        "description": "game.models",
        "isExtraImport": true,
        "detail": "game.models",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "game.models",
        "description": "game.models",
        "isExtraImport": true,
        "detail": "game.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "post.models",
        "description": "post.models",
        "isExtraImport": true,
        "detail": "post.models",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "post.models",
        "description": "post.models",
        "isExtraImport": true,
        "detail": "post.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "importPath": "post.models",
        "description": "post.models",
        "isExtraImport": true,
        "detail": "post.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "OnlineUsers",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "LoginForm",
        "importPath": "authentication.forms",
        "description": "authentication.forms",
        "isExtraImport": true,
        "detail": "authentication.forms",
        "documentation": {}
    },
    {
        "label": "SignupForm",
        "importPath": "authentication.forms",
        "description": "authentication.forms",
        "isExtraImport": true,
        "detail": "authentication.forms",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "game_form",
        "importPath": "game.forms",
        "description": "game.forms",
        "isExtraImport": true,
        "detail": "game.forms",
        "documentation": {}
    },
    {
        "label": "SearchBar",
        "importPath": "game.forms",
        "description": "game.forms",
        "isExtraImport": true,
        "detail": "game.forms",
        "documentation": {}
    },
    {
        "label": "searchBy",
        "importPath": "game.helpers",
        "description": "game.helpers",
        "isExtraImport": true,
        "detail": "game.helpers",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "handler404",
        "importPath": "django.conf.urls",
        "description": "django.conf.urls",
        "isExtraImport": true,
        "detail": "django.conf.urls",
        "documentation": {}
    },
    {
        "label": "handler500",
        "importPath": "django.conf.urls",
        "description": "django.conf.urls",
        "isExtraImport": true,
        "detail": "django.conf.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "authentication",
        "description": "authentication",
        "isExtraImport": true,
        "detail": "authentication",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "accounts",
        "description": "accounts",
        "isExtraImport": true,
        "detail": "accounts",
        "documentation": {}
    },
    {
        "label": "favorite_game_view",
        "importPath": "accounts.views",
        "description": "accounts.views",
        "isExtraImport": true,
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "follower_view",
        "importPath": "accounts.views",
        "description": "accounts.views",
        "isExtraImport": true,
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "unfavorite_game_view",
        "importPath": "accounts.views",
        "description": "accounts.views",
        "isExtraImport": true,
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "unfollow_view",
        "importPath": "accounts.views",
        "description": "accounts.views",
        "isExtraImport": true,
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "user_profile_view",
        "importPath": "accounts.views",
        "description": "accounts.views",
        "isExtraImport": true,
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "favorite_game_view",
        "importPath": "accounts.views",
        "description": "accounts.views",
        "isExtraImport": true,
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "user_list_view",
        "importPath": "accounts.views",
        "description": "accounts.views",
        "isExtraImport": true,
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "AddGameView",
        "importPath": "game.views",
        "description": "game.views",
        "isExtraImport": true,
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "AllGameView",
        "importPath": "game.views",
        "description": "game.views",
        "isExtraImport": true,
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "GameTitleView",
        "importPath": "game.views",
        "description": "game.views",
        "isExtraImport": true,
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "PlatformView",
        "importPath": "game.views",
        "description": "game.views",
        "isExtraImport": true,
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "Search",
        "importPath": "game.views",
        "description": "game.views",
        "isExtraImport": true,
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "error_404_view",
        "importPath": "error_pages.views",
        "description": "error_pages.views",
        "isExtraImport": true,
        "detail": "error_pages.views",
        "documentation": {}
    },
    {
        "label": "error_500_view",
        "importPath": "error_pages.views",
        "description": "error_pages.views",
        "isExtraImport": true,
        "detail": "error_pages.views",
        "documentation": {}
    },
    {
        "label": "PostCreate",
        "importPath": "post.views",
        "description": "post.views",
        "isExtraImport": true,
        "detail": "post.views",
        "documentation": {}
    },
    {
        "label": "PostDetailView",
        "importPath": "post.views",
        "description": "post.views",
        "isExtraImport": true,
        "detail": "post.views",
        "documentation": {}
    },
    {
        "label": "PostListView",
        "importPath": "post.views",
        "description": "post.views",
        "isExtraImport": true,
        "detail": "post.views",
        "documentation": {}
    },
    {
        "label": "add_comment_to_post",
        "importPath": "post.views",
        "description": "post.views",
        "isExtraImport": true,
        "detail": "post.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic.detail",
        "description": "django.views.generic.detail",
        "isExtraImport": true,
        "detail": "django.views.generic.detail",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic.list",
        "description": "django.views.generic.list",
        "isExtraImport": true,
        "detail": "django.views.generic.list",
        "documentation": {}
    },
    {
        "label": "CommentForm",
        "importPath": "post.forms",
        "description": "post.forms",
        "isExtraImport": true,
        "detail": "post.forms",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "accounts.admin",
        "description": "accounts.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    model = CustomUser\n    list_display = [\n        \"username\",\n        \"email\",\n        \"bio\",\n        \"platform_choice_field\",\n        \"avatar\",\n    ]\n    add_fieldsets = UserAdmin.add_fieldsets + (",
        "detail": "accounts.admin",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "accounts.apps",
        "description": "accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    name = \"accounts\"",
        "detail": "accounts.apps",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "accounts.models",
        "description": "accounts.models",
        "peekOfCode": "class CustomUser(AbstractUser):\n    username = models.CharField(max_length=20, unique=True)\n    email = models.EmailField(max_length=70, unique=True)\n    bio = models.CharField(max_length=500)\n    date_joined = models.DateField(default=timezone.now)\n    platform_choice_field = models.CharField(max_length=50, choices=PLATFORM_CHOICES)\n    avatar = models.ImageField(null=True, blank=True, upload_to=\"media/\", default='./media/default.png')\n    followers = models.ManyToManyField(\"self\", symmetrical=False)\n    favorite_games = models.ManyToManyField(Game, symmetrical=False)\n    is_online = models.BooleanField(default=False)",
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "OnlineUsers",
        "kind": 6,
        "importPath": "accounts.models",
        "description": "accounts.models",
        "peekOfCode": "class OnlineUsers(models.Model):\n    user_list = models.ManyToManyField(CustomUser, symmetrical=False)",
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "PLATFORM_CHOICES",
        "kind": 5,
        "importPath": "accounts.models",
        "description": "accounts.models",
        "peekOfCode": "PLATFORM_CHOICES = (\n        (\"PC\", \"PC\"),\n        (\"PS5\", \"PS5\"),\n        (\"XSX\", \"XSX\"),\n        (\"Switch\", \"Switch\"),\n        (\"iOS\", \"iOS\"),\n        (\"Android\", \"Android\"),\n        (\"Arcade\", \"Arcade\"),\n        (\"PS4\", \"PS4\"),\n        (\"PS3\", \"PS3\"),",
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def index(request):\n    user = CustomUser.objects.get(id=request.user.id)\n    posts = Post.objects.filter(user_posted=request.user.id).order_by(\"-post_date\")[:10]\n    users_list = CustomUser.objects.all().order_by(\"-date_joined\")[:5]\n    count = Game.objects.all().count()\n    slice = random.random() * (count - 1)\n    games = Game.objects.all()[slice : slice + 1]\n    return render(\n        request,\n        \"index.html\",",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "user_profile_view",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def user_profile_view(request, CustomUser_id):\n    my_Custom_User = CustomUser.objects.get(id=CustomUser_id)\n    user_info = CustomUser.objects.get(id=CustomUser_id)\n    return render(request, \"user_profile.html\", {\"user\": my_Custom_User})\n@login_required\ndef follower_view(request, user_id):\n    request.user.followers.add(CustomUser.objects.get(id=user_id))\n    return HttpResponseRedirect(reverse(\"profile\", args=[user_id]))\n@login_required\ndef favorite_game_view(request, game_id):",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "follower_view",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def follower_view(request, user_id):\n    request.user.followers.add(CustomUser.objects.get(id=user_id))\n    return HttpResponseRedirect(reverse(\"profile\", args=[user_id]))\n@login_required\ndef favorite_game_view(request, game_id):\n    request.user.favorite_games.add(Game.objects.get(id=game_id))\n    return HttpResponseRedirect(reverse(\"profile\", args=[request.user.id]))\n@login_required\ndef unfollow_view(request, user_id):\n    request.user.followers.remove(CustomUser.objects.get(id=user_id))",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "favorite_game_view",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def favorite_game_view(request, game_id):\n    request.user.favorite_games.add(Game.objects.get(id=game_id))\n    return HttpResponseRedirect(reverse(\"profile\", args=[request.user.id]))\n@login_required\ndef unfollow_view(request, user_id):\n    request.user.followers.remove(CustomUser.objects.get(id=user_id))\n    return HttpResponseRedirect(reverse(\"profile\", args=[user_id]))\n@login_required\ndef unfavorite_game_view(request, game_id):\n    request.user.favorite_games.remove(Game.objects.get(id=game_id))",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "unfollow_view",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def unfollow_view(request, user_id):\n    request.user.followers.remove(CustomUser.objects.get(id=user_id))\n    return HttpResponseRedirect(reverse(\"profile\", args=[user_id]))\n@login_required\ndef unfavorite_game_view(request, game_id):\n    request.user.favorite_games.remove(Game.objects.get(id=game_id))\n    return HttpResponseRedirect(reverse(\"game-title\", args=[game_id]))\ndef user_list_view(request):\n    user = CustomUser.objects.filter(is_online=True)\n    all_users = CustomUser.objects.all()",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "unfavorite_game_view",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def unfavorite_game_view(request, game_id):\n    request.user.favorite_games.remove(Game.objects.get(id=game_id))\n    return HttpResponseRedirect(reverse(\"game-title\", args=[game_id]))\ndef user_list_view(request):\n    user = CustomUser.objects.filter(is_online=True)\n    all_users = CustomUser.objects.all()\n    return render(request, \"all-users.html\", {\"user\": user, \"all_users\":all_users})\n# def profile_view(request, username):\n#     user = CustomUser.objects.get(username=username)\n#     return render(request, \"user_profile.html\", {\"user\": user})",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "user_list_view",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def user_list_view(request):\n    user = CustomUser.objects.filter(is_online=True)\n    all_users = CustomUser.objects.all()\n    return render(request, \"all-users.html\", {\"user\": user, \"all_users\":all_users})\n# def profile_view(request, username):\n#     user = CustomUser.objects.get(username=username)\n#     return render(request, \"user_profile.html\", {\"user\": user})",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "AuthenticationConfig",
        "kind": 6,
        "importPath": "authentication.apps",
        "description": "authentication.apps",
        "peekOfCode": "class AuthenticationConfig(AppConfig):\n    name = \"authentication\"",
        "detail": "authentication.apps",
        "documentation": {}
    },
    {
        "label": "LoginForm",
        "kind": 6,
        "importPath": "authentication.forms",
        "description": "authentication.forms",
        "peekOfCode": "class LoginForm(forms.Form):\n    username = forms.CharField(max_length=50)\n    password = forms.CharField(widget=forms.PasswordInput())\nclass SignupForm(forms.Form):\n    PLATFORM_CHOICES = (\n        (\"PC\", \"PC\"),\n        (\"PS5\", \"PS5\"),\n        (\"XSX\", \"XSX\"),\n        (\"Switch\", \"Switch\"),\n        (\"iOS\", \"iOS\"),",
        "detail": "authentication.forms",
        "documentation": {}
    },
    {
        "label": "SignupForm",
        "kind": 6,
        "importPath": "authentication.forms",
        "description": "authentication.forms",
        "peekOfCode": "class SignupForm(forms.Form):\n    PLATFORM_CHOICES = (\n        (\"PC\", \"PC\"),\n        (\"PS5\", \"PS5\"),\n        (\"XSX\", \"XSX\"),\n        (\"Switch\", \"Switch\"),\n        (\"iOS\", \"iOS\"),\n        (\"Android\", \"Android\"),\n        (\"Arcade\", \"Arcade\"),\n        (\"PS4\", \"PS4\"),",
        "detail": "authentication.forms",
        "documentation": {}
    },
    {
        "label": "login_view",
        "kind": 2,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "def login_view(request):\n    if request.method == \"POST\":\n        form = LoginForm(request.POST)\n        if form.is_valid():\n            data = form.cleaned_data\n            user = authenticate(\n                request,\n                username=data[\"username\"],\n                password=data[\"password\"],\n            )",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "signup_view",
        "kind": 2,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "def signup_view(request):\n    if request.method == \"POST\":\n        form = SignupForm(request.POST, request.FILES)\n        if form.is_valid():\n            data = form.cleaned_data\n            CustomUser.objects.create_user(\n                username=data[\"username\"],\n                password=data[\"password\"],\n                bio=data[\"bio\"],\n                email=data[\"email\"],",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "singup_handler",
        "kind": 2,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "def singup_handler(request):\n    if request.user.is_authenticated():\n        return HttpResponseRedirect(\"/\")\n    else:\n        return HttpResponseRedirect(\"/signup/\")\n@login_required\ndef logout_view(request):\n    users = CustomUser.objects.get(username=request.user)\n    users.is_online = False\n    users.save()",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "logout_view",
        "kind": 2,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "def logout_view(request):\n    users = CustomUser.objects.get(username=request.user)\n    users.is_online = False\n    users.save()\n    logout(request)\n    return HttpResponseRedirect(reverse(\"homepage\"))",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "ErrorPagesConfig",
        "kind": 6,
        "importPath": "error_pages.apps",
        "description": "error_pages.apps",
        "peekOfCode": "class ErrorPagesConfig(AppConfig):\n    name = \"error_pages\"",
        "detail": "error_pages.apps",
        "documentation": {}
    },
    {
        "label": "error_404_view",
        "kind": 2,
        "importPath": "error_pages.views",
        "description": "error_pages.views",
        "peekOfCode": "def error_404_view(request, exception):\n    data = {}\n    return render(request, \"404.html\", data)\ndef error_500_view(request):\n    data = {}\n    return render(request, \"500.html\", data)",
        "detail": "error_pages.views",
        "documentation": {}
    },
    {
        "label": "error_500_view",
        "kind": 2,
        "importPath": "error_pages.views",
        "description": "error_pages.views",
        "peekOfCode": "def error_500_view(request):\n    data = {}\n    return render(request, \"500.html\", data)",
        "detail": "error_pages.views",
        "documentation": {}
    },
    {
        "label": "GameConfig",
        "kind": 6,
        "importPath": "game.apps",
        "description": "game.apps",
        "peekOfCode": "class GameConfig(AppConfig):\n    name = \"game\"",
        "detail": "game.apps",
        "documentation": {}
    },
    {
        "label": "game_form",
        "kind": 6,
        "importPath": "game.forms",
        "description": "game.forms",
        "peekOfCode": "class game_form(forms.Form):\n    PLATFORM_CHOICES = (\n        (\"PC\", \"PC\"),\n        (\"PS5\", \"PS5\"),\n        (\"XSX\", \"XSX\"),\n        (\"Switch\", \"Switch\"),\n        (\"iOS\", \"iOS\"),\n        (\"Android\", \"Android\"),\n        (\"Arcade\", \"Arcade\"),\n        (\"PS4\", \"PS4\"),",
        "detail": "game.forms",
        "documentation": {}
    },
    {
        "label": "SearchBar",
        "kind": 6,
        "importPath": "game.forms",
        "description": "game.forms",
        "peekOfCode": "class SearchBar(forms.Form):\n    search = forms.CharField()",
        "detail": "game.forms",
        "documentation": {}
    },
    {
        "label": "searchBy",
        "kind": 2,
        "importPath": "game.helpers",
        "description": "game.helpers",
        "peekOfCode": "def searchBy(title):\n    game = []\n    search = \"\"\n    regex = r\"([\\s\\w\\d+]+)\"\n    find = re.findall(regex, title)\n    if find:\n        for words in find:\n            search = words\n    get = Game.objects.all()\n    for items in get:",
        "detail": "game.helpers",
        "documentation": {}
    },
    {
        "label": "Game",
        "kind": 6,
        "importPath": "game.models",
        "description": "game.models",
        "peekOfCode": "class Game(models.Model):\n    PLATFORM_CHOICES = (\n        (\"PC\", \"PC\"),\n        (\"PS5\", \"PS5\"),\n        (\"XSX\", \"XSX\"),\n        (\"Switch\", \"Switch\"),\n        (\"iOS\", \"iOS\"),\n        (\"Android\", \"Android\"),\n        (\"Arcade\", \"Arcade\"),\n        (\"PS4\", \"PS4\"),",
        "detail": "game.models",
        "documentation": {}
    },
    {
        "label": "AllGameView",
        "kind": 6,
        "importPath": "game.views",
        "description": "game.views",
        "peekOfCode": "class AllGameView(View):\n    def get(self, request):\n        template = \"all-games.html\"\n        search_bar = SearchBar()\n        games = Game.objects.all()\n        return render(\n            request,\n            template,\n            {\n                \"games\": games,",
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "AddGameView",
        "kind": 6,
        "importPath": "game.views",
        "description": "game.views",
        "peekOfCode": "class AddGameView(LoginRequiredMixin, View):\n    def get(self, request):\n        template = \"add-game.html\"\n        form = game_form()\n        return render(request, template, {\"form\": form})\n    def post(self, request):\n        form = game_form(request.POST, request.FILES)\n        if form.is_valid():\n            data = form.cleaned_data\n            if data[\"cover_art\"]:",
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "GameTitleView",
        "kind": 2,
        "importPath": "game.views",
        "description": "game.views",
        "peekOfCode": "def GameTitleView(request, game_id):\n    template = \"game-info.html\"\n    game = Game.objects.get(id=game_id)\n    platform = game.get_platform_display()\n    return render(request, template, {\"game\": game, \"platform\": platform})\nclass AddGameView(LoginRequiredMixin, View):\n    def get(self, request):\n        template = \"add-game.html\"\n        form = game_form()\n        return render(request, template, {\"form\": form})",
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "PlatformView",
        "kind": 2,
        "importPath": "game.views",
        "description": "game.views",
        "peekOfCode": "def PlatformView(request, platform):\n    template = \"platform.html\"\n    string = str(platform)\n    if len(string) < 2:\n        string = \"0\" + str(platform)\n    games = Game.objects.filter(platform=string)\n    return render(request, template, {\"games\": games})\ndef Search(request, title):\n    template = \"search.html\"\n    games = searchBy(title)",
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "Search",
        "kind": 2,
        "importPath": "game.views",
        "description": "game.views",
        "peekOfCode": "def Search(request, title):\n    template = \"search.html\"\n    games = searchBy(title)\n    return render(request, template, {\"games\": games})",
        "detail": "game.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "gamefaqs_project.asgi",
        "description": "gamefaqs_project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "gamefaqs_project.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = config(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "SECRET_KEY = config(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"accounts\",",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"accounts\",\n    \"authentication\",\n    \"post\",",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"gamefaqs_project.urls\"",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "ROOT_URLCONF = \"gamefaqs_project.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "WSGI_APPLICATION = \"gamefaqs_project.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": str(BASE_DIR / \"db.sqlite3\"),\n    }\n}\n# Password validation",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": str(BASE_DIR / \"db.sqlite3\"),\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nAUTH_USER_MODEL = \"accounts.CustomUser\"",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nMEDIA_URL = \"/media/\"",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nLOGIN_URL = \"/login\"",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nLOGIN_URL = \"/login\"\nDEFAULT_AUTO_FIELD = \"django.db.models.AutoField\"",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "STATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nLOGIN_URL = \"/login\"\nDEFAULT_AUTO_FIELD = \"django.db.models.AutoField\"\nVENV_PATH = os.path.dirname(BASE_DIR)\nSTATIC_ROOT = os.path.join(VENV_PATH, \"static_root\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "STATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nAUTH_USER_MODEL = \"accounts.CustomUser\"\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nLOGIN_URL = \"/login\"\nDEFAULT_AUTO_FIELD = \"django.db.models.AutoField\"\nVENV_PATH = os.path.dirname(BASE_DIR)\nSTATIC_ROOT = os.path.join(VENV_PATH, \"static_root\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"accounts.CustomUser\"\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nLOGIN_URL = \"/login\"\nDEFAULT_AUTO_FIELD = \"django.db.models.AutoField\"\nVENV_PATH = os.path.dirname(BASE_DIR)\nSTATIC_ROOT = os.path.join(VENV_PATH, \"static_root\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nLOGIN_URL = \"/login\"\nDEFAULT_AUTO_FIELD = \"django.db.models.AutoField\"\nVENV_PATH = os.path.dirname(BASE_DIR)\nSTATIC_ROOT = os.path.join(VENV_PATH, \"static_root\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nLOGIN_URL = \"/login\"\nDEFAULT_AUTO_FIELD = \"django.db.models.AutoField\"\nVENV_PATH = os.path.dirname(BASE_DIR)\nSTATIC_ROOT = os.path.join(VENV_PATH, \"static_root\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "LOGIN_URL = \"/login\"\nDEFAULT_AUTO_FIELD = \"django.db.models.AutoField\"\nVENV_PATH = os.path.dirname(BASE_DIR)\nSTATIC_ROOT = os.path.join(VENV_PATH, \"static_root\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.AutoField\"\nVENV_PATH = os.path.dirname(BASE_DIR)\nSTATIC_ROOT = os.path.join(VENV_PATH, \"static_root\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "VENV_PATH",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "VENV_PATH = os.path.dirname(BASE_DIR)\nSTATIC_ROOT = os.path.join(VENV_PATH, \"static_root\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "gamefaqs_project.settings",
        "description": "gamefaqs_project.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(VENV_PATH, \"static_root\")",
        "detail": "gamefaqs_project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "gamefaqs_project.urls",
        "description": "gamefaqs_project.urls",
        "peekOfCode": "urlpatterns = [\n    # Core links\n    path(\"\", user_view.index, name=\"homepage\"),\n    path(\"admin/\", admin.site.urls, name=\"admin\"),\n    # Game Related Links\n    path(\"viewGames/\", AllGameView.as_view(), name=\"games\"),\n    path(\"viewGames/<int:game_id>/\", GameTitleView, name=\"game-title\"),\n    path(\"newGame/\", AddGameView.as_view(), name=\"add-game\"),\n    path(\"viewGames/platform/<str:platform>/\", PlatformView, name=\"platform\"),\n    path(\"viewGames/search/<str:title>/\", Search, name=\"search\"),",
        "detail": "gamefaqs_project.urls",
        "documentation": {}
    },
    {
        "label": "handler404",
        "kind": 5,
        "importPath": "gamefaqs_project.urls",
        "description": "gamefaqs_project.urls",
        "peekOfCode": "handler404 = \"error_pages.views.error_404_view\"\nhandler500 = \"error_pages.views.error_500_view\"",
        "detail": "gamefaqs_project.urls",
        "documentation": {}
    },
    {
        "label": "handler500",
        "kind": 5,
        "importPath": "gamefaqs_project.urls",
        "description": "gamefaqs_project.urls",
        "peekOfCode": "handler500 = \"error_pages.views.error_500_view\"",
        "detail": "gamefaqs_project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "gamefaqs_project.wsgi",
        "description": "gamefaqs_project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "gamefaqs_project.wsgi",
        "documentation": {}
    },
    {
        "label": "PostConfig",
        "kind": 6,
        "importPath": "post.apps",
        "description": "post.apps",
        "peekOfCode": "class PostConfig(AppConfig):\n    name = \"post\"",
        "detail": "post.apps",
        "documentation": {}
    },
    {
        "label": "CreatePostForm",
        "kind": 6,
        "importPath": "post.forms",
        "description": "post.forms",
        "peekOfCode": "class CreatePostForm(forms.ModelForm):\n    class Meta:\n        model = Post\n        fields = [\"topic\", \"game\", \"platforms\", \"text\", \"post_date\", \"thumbnail\"]\nclass CommentForm(forms.ModelForm):\n    class Meta:\n        model = Comment\n        fields = (\"text\",)",
        "detail": "post.forms",
        "documentation": {}
    },
    {
        "label": "CommentForm",
        "kind": 6,
        "importPath": "post.forms",
        "description": "post.forms",
        "peekOfCode": "class CommentForm(forms.ModelForm):\n    class Meta:\n        model = Comment\n        fields = (\"text\",)",
        "detail": "post.forms",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "post.models",
        "description": "post.models",
        "peekOfCode": "class Post(models.Model):\n    text = models.TextField(max_length=1000)\n    post_date = models.DateTimeField(default=timezone.now)\n    topic = models.CharField(max_length=40)\n    game = models.ForeignKey(Game, on_delete=models.CASCADE)\n    user_posted = models.ForeignKey(CustomUser, on_delete=models.CASCADE)\n    thumbnail = models.ImageField(null=True, blank=True, upload_to=\"media/\", default = \"static/assets/images/hs.jpeg\")\n    platforms = models.CharField(choices=PLATFORM_CHOICES, max_length=50)\n    def get_absolute_url(self):\n        return reverse(\"post_detail\", kwargs={\"pk\": self.pk})",
        "detail": "post.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "post.models",
        "description": "post.models",
        "peekOfCode": "class Comment(models.Model):\n    class Meta:\n        ordering = [\"-created_date\"]\n    post = models.ForeignKey(\n        Post, on_delete=models.CASCADE, max_length=1200, related_name=\"comments\"\n    )\n    author = models.CharField(max_length=200)\n    text = models.TextField()\n    created_date = models.DateTimeField(default=timezone.now)\n    approved_comment = models.BooleanField(default=False)",
        "detail": "post.models",
        "documentation": {}
    },
    {
        "label": "PLATFORM_CHOICES",
        "kind": 5,
        "importPath": "post.models",
        "description": "post.models",
        "peekOfCode": "PLATFORM_CHOICES = (\n        (\"PC\", \"PC\"),\n        (\"PS5\", \"PS5\"),\n        (\"XSX\", \"XSX\"),\n        (\"Switch\", \"Switch\"),\n        (\"iOS\", \"iOS\"),\n        (\"Android\", \"Android\"),\n        (\"Arcade\", \"Arcade\"),\n        (\"PS4\", \"PS4\"),\n        (\"PS3\", \"PS3\"),",
        "detail": "post.models",
        "documentation": {}
    },
    {
        "label": "PostCreate",
        "kind": 6,
        "importPath": "post.views",
        "description": "post.views",
        "peekOfCode": "class PostCreate(LoginRequiredMixin, CreateView):\n    template_name = \"add_post.html\"\n    model = Post\n    fields = [\"topic\", \"game\",  \"text\",  \"thumbnail\"]\n    def form_valid(self, form):\n        form.instance.user_posted = self.request.user\n        return super().form_valid(form)\nclass PostDetailView(DetailView):\n    template_name = \"post_detail.html\"\n    model = Post",
        "detail": "post.views",
        "documentation": {}
    },
    {
        "label": "PostDetailView",
        "kind": 6,
        "importPath": "post.views",
        "description": "post.views",
        "peekOfCode": "class PostDetailView(DetailView):\n    template_name = \"post_detail.html\"\n    model = Post\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        return context\nclass PostListView(ListView):\n    template_name = \"post_list.html\"\n    model = Post\n    def get_context_data(self, **kwargs):",
        "detail": "post.views",
        "documentation": {}
    },
    {
        "label": "PostListView",
        "kind": 6,
        "importPath": "post.views",
        "description": "post.views",
        "peekOfCode": "class PostListView(ListView):\n    template_name = \"post_list.html\"\n    model = Post\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        return context\n@login_required\ndef add_comment_to_post(request, pk):\n    post = get_object_or_404(Post, pk=pk)\n    if request.method == \"POST\":",
        "detail": "post.views",
        "documentation": {}
    },
    {
        "label": "add_comment_to_post",
        "kind": 2,
        "importPath": "post.views",
        "description": "post.views",
        "peekOfCode": "def add_comment_to_post(request, pk):\n    post = get_object_or_404(Post, pk=pk)\n    if request.method == \"POST\":\n        form = CommentForm(request.POST)\n        if form.is_valid():\n            comment = form.save(commit=False)\n            comment.post = post\n            comment.author = request.user\n            comment.author_id = request.user.id\n            comment.save()",
        "detail": "post.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"gamefaqs_project.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]